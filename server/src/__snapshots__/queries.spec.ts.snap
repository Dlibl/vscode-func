// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should query globals 1`] = `
Array [
  Object {
    "node": Node {
      "0": 0,
      "id": 5308648,
      "startIndex": 20,
      "startPosition": Object {
        "column": 19,
        "row": 1,
      },
      "tree": Tree {
        "0": 5316704,
        "language": Language {
          "0": 5294464,
          "fields": Array [
            null,
            "agruments",
            "alternative",
            "arguments",
            "asm_body",
            "body",
            "condition",
            "consequent",
            "count",
            "function",
            "method_name",
            "name",
            "postcondition",
            "precondition",
            "return_type",
            "specifiers",
            "type",
            "type_variables",
            "variable",
          ],
          "types": Array [
            ,
            "identifier",
            "global",
            ",",
            ";",
            "->",
            "(",
            ")",
            "int",
            "cell",
            "slice",
            "builder",
            "cont",
            "tuple",
            "[",
            "]",
            "var_type",
            "()",
            "=",
            "+=",
            "-=",
            "*=",
            "/=",
            "~/=",
            "^/=",
            "%=",
            "~%=",
            "^%=",
            "<<=",
            ">>=",
            "~>>=",
            "^>>=",
            "&=",
            "|=",
            "^=",
            "?",
            ":",
            "==",
            "<",
            ">",
            "<=",
            ">=",
            "!=",
            "<=>",
            "<<",
            ">>",
            "~>>",
            "^>>",
            "-",
            "+",
            "|",
            "^",
            "*",
            "/",
            "%",
            "~/",
            "^/",
            "~%",
            "^%",
            "/%",
            "&",
            "~",
            ".",
            "type",
            "function_name",
            "impure",
            "inline",
            "inline_ref",
            "method_id",
            "forall",
            "asm",
            "return",
            "{",
            "}",
            "repeat",
            "if",
            "ifnot",
            "else",
            "elseif",
            "elseifnot",
            "do",
            "until",
            "while",
            "number_literal",
            "string_literal",
            "underscore",
            "comment",
            "translation_unit",
            ,
            "global_var_declarations",
            ,
            ,
            "function_type",
            ,
            ,
            "primitive_type",
            "tensor_type",
            "tuple_type",
            "hole_type",
            "unit_type",
            "type_identifier",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "method_call",
            ,
            "function_application",
            "variable_declaration",
            "type_expression",
            "parenthesized_type_expression",
            "tensor_type_expression",
            "tuple_type_expression",
            ,
            ,
            "unit_literal",
            "parenthesized_expression",
            "tensor_expression",
            "tuple_expression",
            "function_definition",
            "inline",
            "method_id",
            "type_variables_list",
            "parameter_list",
            "parameter_declaration",
            "asm_function_body",
            "asm_specifier",
            "asm_instruction",
            ,
            "return_statement",
            "block_statement",
            "expression_statement",
            "empty_statement",
            "repeat_statement",
            "if_statement",
            ,
            "do_statement",
            "while_statement",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
          ],
        },
        "textCallback": [Function],
      },
    },
    "range": Object {
      "end": Object {
        "character": 21,
        "line": 1,
      },
      "start": Object {
        "character": 19,
        "line": 1,
      },
    },
    "text": "id",
    "type": "globalVar",
  },
  Object {
    "node": Node {
      "0": 0,
      "id": 5316504,
      "startIndex": 36,
      "startPosition": Object {
        "column": 11,
        "row": 3,
      },
      "tree": Tree {
        "0": 5316704,
        "language": Language {
          "0": 5294464,
          "fields": Array [
            null,
            "agruments",
            "alternative",
            "arguments",
            "asm_body",
            "body",
            "condition",
            "consequent",
            "count",
            "function",
            "method_name",
            "name",
            "postcondition",
            "precondition",
            "return_type",
            "specifiers",
            "type",
            "type_variables",
            "variable",
          ],
          "types": Array [
            ,
            "identifier",
            "global",
            ",",
            ";",
            "->",
            "(",
            ")",
            "int",
            "cell",
            "slice",
            "builder",
            "cont",
            "tuple",
            "[",
            "]",
            "var_type",
            "()",
            "=",
            "+=",
            "-=",
            "*=",
            "/=",
            "~/=",
            "^/=",
            "%=",
            "~%=",
            "^%=",
            "<<=",
            ">>=",
            "~>>=",
            "^>>=",
            "&=",
            "|=",
            "^=",
            "?",
            ":",
            "==",
            "<",
            ">",
            "<=",
            ">=",
            "!=",
            "<=>",
            "<<",
            ">>",
            "~>>",
            "^>>",
            "-",
            "+",
            "|",
            "^",
            "*",
            "/",
            "%",
            "~/",
            "^/",
            "~%",
            "^%",
            "/%",
            "&",
            "~",
            ".",
            "type",
            "function_name",
            "impure",
            "inline",
            "inline_ref",
            "method_id",
            "forall",
            "asm",
            "return",
            "{",
            "}",
            "repeat",
            "if",
            "ifnot",
            "else",
            "elseif",
            "elseifnot",
            "do",
            "until",
            "while",
            "number_literal",
            "string_literal",
            "underscore",
            "comment",
            "translation_unit",
            ,
            "global_var_declarations",
            ,
            ,
            "function_type",
            ,
            ,
            "primitive_type",
            "tensor_type",
            "tuple_type",
            "hole_type",
            "unit_type",
            "type_identifier",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            "method_call",
            ,
            "function_application",
            "variable_declaration",
            "type_expression",
            "parenthesized_type_expression",
            "tensor_type_expression",
            "tuple_type_expression",
            ,
            ,
            "unit_literal",
            "parenthesized_expression",
            "tensor_expression",
            "tuple_expression",
            "function_definition",
            "inline",
            "method_id",
            "type_variables_list",
            "parameter_list",
            "parameter_declaration",
            "asm_function_body",
            "asm_specifier",
            "asm_instruction",
            ,
            "return_statement",
            "block_statement",
            "expression_statement",
            "empty_statement",
            "repeat_statement",
            "if_statement",
            ,
            "do_statement",
            "while_statement",
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
            ,
          ],
        },
        "textCallback": [Function],
      },
    },
    "range": Object {
      "end": Object {
        "character": 15,
        "line": 3,
      },
      "start": Object {
        "character": 11,
        "line": 3,
      },
    },
    "text": "test",
    "type": "function",
  },
]
`;
